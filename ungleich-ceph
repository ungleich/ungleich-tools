#!/bin/sh
set -e

usage() {
    progname=$(basename $0)
    cat <<eof >&2
usage: ${progname} [-c CLASS] [-F] [-h] -m MODE [-d] [-v] [-w WEIGHT] device

positional arguments:
  device      device to create OSD on

optional arguments:
  -c CLASS    device class, e.g. hdd or ssd (only used in rest_of_disk mode)
  -F          use fullsize for weight (only used in full_disk mode and if
              weight not specified), otherwise use dummy 0.1
  -h          show this help message and exit
  -m MODE     operate in specified mode: full_disk, rest_of_disk
  -d          debug mode (set -x)
  -w WEIGHT   OSD weight (only used in rest_of_disk mode)
eof
}

process() {
    osd_id=$(ceph osd create)
    mountpath="/var/lib/ceph/osd/ceph-${osd_id}"
    mkdir -p "${mountpath}"

    case "${mode}" in
    full_disk)
        osd_uuid=$(uuidgen)

        ceph-disk zap $dev
        ceph-disk prepare --bluestore $dev --osd-id ${osd_id} \
            --osd-uuid ${osd_uuid} --crush-device-class hdd
        mount "${dev}1" "${mountpath}"
        ;;
    rest_of_disk)
        magic="ceph osd volume v026"
        fsid=$(ceph-conf --cluster=ceph --name=osd. --lookup fsid)
        uuid_metadata=$(uuidgen)
        uuid_block=$(uuidgen)
        dev_metadata="/dev/disk/by-partuuid/${uuid_metadata}"
        dev_block="/dev/disk/by-partuuid/${uuid_block}"

        if [ ! "${weight}" ]
        then
            devname=$(readlink -f "${dev_block}")
            nodev=$(echo "${devname}" | sed 's,/dev/,,')
            weight=$(lsblk -l -b | awk "/^$nodev/ { print \$4/(1024^4) }")
        fi

        /sbin/sgdisk --new=0:0:+100M --change-name="0:ceph data" \
                     --partition-guid="0:$uuid_metadata" \
                     --typecode=0:4fbd7e29-9d25-41b8-afd0-062c0ceff05d \
                     --mbrtogpt -- $dev
        /sbin/udevadm settle --timeout=600
        # Using gdisk --largest-new does not change the name or set guid;
        # So use 2 steps instead
        /sbin/sgdisk --largest-new=0 --mbrtogpt -- $dev
        /sbin/udevadm settle --timeout=600
        lastpart=$(gdisk -l $dev | tail -n1 | awk '{ print $1 }')
        /sbin/sgdisk --change-name="${lastpart}:ceph block" \
                     --partition-guid="${lastpart}:$uuid_block" \
                     --typecode="${lastpart}:cafecafe-9b03-4f30-b4c6-b4b80ceff106" \
                     --mbrtogpt -- $dev
        /sbin/udevadm settle --timeout=600
        /sbin/mkfs -t xfs -f -i size=2048 -- "$dev_metadata"
        mount "${dev_metadata}" "${mountpath}"
        ln -s "${dev_block}" "${mountpath}/block"
        echo "$uuid_block" > "$mountpath/block_uuid"
        echo "$fsid" > "$mountpath/ceph_fsid"
        echo "$magic" > "$mountpath/magic"
        echo "$class" > "$mountpath/crush_device_class"
        # Important, otherwise --mkfs later will try to create filestore
        echo bluestore > "$mountpath/type"
        echo "${metadata_dev} ${mountpath} xfs noatime 0 0" >> /etc/fstab
        ;;
    esac

    echo "${osd_id}" > "${mountpath}/whoami"
    touch "${mountpath}/sysvinit"
    ceph auth get-or-create "osd.${osd_id}" osd \
         'allow *' mon 'allow profile osd' > "${mountpath}/keyring"

    ceph-osd --cluster ceph -i ${osd_id} --mkfs
    chown -R ceph:ceph "${mountpath}"
    host=$(hostname)
    ceph osd crush add osd.${osd_id} ${weight} ${host}

    # Starting with monit, if available
    if [ -e /etc/monit ]; then
        /opt/ungleich-tools/monit-ceph-create-start osd.${osd_id}
    else
        /etc/init.d/ceph start osd.${osd_id}
    fi
}

# parse args
class=
fullsize=0
mode=
weight=
debug=

while getopts "c:Fhm:dw:" arg
do
    case "${arg}" in
    c)  class="${OPTARG}"
        ;;
    f)  fullsize=1
        ;;
    h)  usage
        exit 2
        ;;
    m)  mode="${OPTARG}"
        ;;
    d)  debug=1
        ;;
    w)  weight="${OPTARG}"
        ;;
    esac
done

case "${mode}" in
rest_of_disk)
    if [ ! "${class}" ]
    then
        printf "Class is required in 'rest_of_disk' mode\n" >&2
        usage
        exit 2
    fi
    ;;
full_disk)
    if [ ! "${weight}" ]
    then
        if [ "${fullsize}" = 1 ]
        then
            DISK_FREE_KB=$(df /dev/ada0p2 | tail -1 | awk '{print $4}')
            weight=$(printf "scale=6\n${DISK_FREE_KB} / (1024 ^ 3)" | bc)
        else
            weight=0.1
        fi
    fi
    ;;
"")
    usage
    exit 2
    ;;
*)
    printf "Invalid mode '${mode}'\n" >&2
    usage
    exit 2
    ;;
esac

shift $(($OPTIND - 1))
if [ "$#" -lt 1 ]
then
    printf "Device is required\n" >&2
    usage
    exit 2
fi

dev=$1; shift

if [ "${debug}" = "1" ]
then
    set -x
fi

# process device
process
